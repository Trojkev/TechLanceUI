{"version":3,"sources":["webpack:///(webpack)/buildin/module.js","webpack:///./src/app/shared/directives/match-height.directive.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AClBuB;AAKvB;IAKI,8BAAoB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;IAClC,CAAC;IAED,8CAAe,GAAf;QAAA,iBAGC;QAFG,qCAAqC;QACrC,UAAU,CAAC,cAAQ,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,EAAE,CAAC,aAAa,EAAE,KAAI,CAAC,WAAW,CAAE,GAAC,EAAE,GAAG,CAAC,CAAC;IAC1F,CAAC;IAED,2CAAY,GAAZ,UAAa,MAAmB,EAAE,SAAiB;QAC/C,0BAA0B;QAE1B,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;YAAC,MAAM,CAAC;QAEpB,mEAAmE;QACnE,IAAM,QAAQ,GAAG,MAAM,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;QAE1D,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;YAAC,MAAM,CAAC;QAEtB,sDAAsD;QACtD,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAC,CAAc;YACxC,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,8CAA8C;QAC9C,IAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC;aACnC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,qBAAqB,EAAE,CAAC,MAAM,EAAhC,CAAgC,CAAC,CAAC;QAEhD,gCAAgC;QAChC,IAAM,SAAS,GAAG,WAAW,CAAC,MAAM,CAAC,UAAC,IAAI,EAAE,IAAI;YAC5C,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;QACrC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEN,8DAA8D;QAC9D,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC;aACf,OAAO,CAAC,UAAC,CAAc,IAAK,QAAC,CAAC,KAAK,CAAC,MAAM,GAAM,SAAS,OAAI,EAAjC,CAAiC,CAAC,CAAC;IACxE,CAAC;IAGD,uCAAQ,GAAR;QACI,qCAAqC;QACrC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAChE,CAAC;IA3CD;QADC,2DAAK,EAAE;;6DACa;IAwCrB;QADC,kEAAY,CAAC,eAAe,CAAC;;;;wDAI7B;IA9CQ,oBAAoB;QAHhC,+DAAS,CAAC;YACP,QAAQ,EAAE,eAAe;SAC5B,CAAC;yCAM0B,wDAAU;OALzB,oBAAoB,CA+ChC;IAAD,2BAAC;CAAA;AA/CgC;AAsDjC;IAAA;IAAiC,CAAC;IAArB,iBAAiB;QAL7B,8DAAQ,CAAC;YACN,YAAY,EAAE,CAAC,oBAAoB,CAAC;YACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC;SAClC,CAAC;OAEW,iBAAiB,CAAI;IAAD,wBAAC;CAAA;AAAJ","file":"common.js","sourcesContent":["module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","import {\r\n    Directive, ElementRef, AfterViewInit,\r\n    Input, HostListener, NgModule\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[matchHeight]'\r\n})\r\nexport class MatchHeightDirective implements AfterViewInit {\r\n    // class name to match height\r\n    @Input()\r\n    matchHeight : string;\r\n\r\n    constructor(private el: ElementRef) {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // call our matchHeight function here\r\n        setTimeout(() => { this.matchHeights(this.el.nativeElement, this.matchHeight )}, 300);\r\n    }\r\n\r\n    matchHeights(parent: HTMLElement, className: string) {\r\n        // match height logic here\r\n\r\n        if (!parent) return;\r\n\r\n        // step 1: find all the child elements with the selected class name\r\n        const children = parent.getElementsByClassName(className);\r\n\r\n        if (!children) return;\r\n\r\n        //Pixinvent - Match hight - fix --- comment below code\r\n        Array.from(children).forEach((x: HTMLElement) => {\r\n            x.style.height = 'initial';\r\n        });\r\n\r\n        // step 2a: get all the child elements heights\r\n        const itemHeights = Array.from(children)\r\n            .map(x => x.getBoundingClientRect().height);\r\n\r\n        // step 2b: find out the tallest\r\n        const maxHeight = itemHeights.reduce((prev, curr) => {\r\n            return curr > prev ? curr : prev;\r\n        }, 0);\r\n\r\n        // step 3: update all the child elements to the tallest height\r\n        Array.from(children)\r\n            .forEach((x: HTMLElement) => x.style.height = `${maxHeight}px`);\r\n    }\r\n\r\n    @HostListener('window:resize')\r\n    onResize() {\r\n        // call our matchHeight function here\r\n        this.matchHeights(this.el.nativeElement, this.matchHeight );\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    declarations: [MatchHeightDirective],\r\n    exports: [MatchHeightDirective]\r\n})\r\n\r\nexport class MatchHeightModule { }"],"sourceRoot":""}